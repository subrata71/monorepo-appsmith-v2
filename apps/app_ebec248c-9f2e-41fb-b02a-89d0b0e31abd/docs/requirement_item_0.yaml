access: Open to all users, no authentication required. No restrictions on usage.
behaviour: Inputs only accept valid numbers; button is disabled until both inputs
  are valid. Sum is calculated and shown when the button is clicked. Result clears
  if either input is changed. Fully client-side, responsive interactions.
name: UI for 2-Sum Calculator
page:
  behaviour: Inputs validate on change. Button enabled when valid. Result shown only
    after calculation, cleared on new input.
  id: sum_calculator
  purpose: Enable users to quickly and easily sum two numbers without backend or authentication.
  sections:
  - behaviour: Each input only accepts numbers. Inline feedback for invalid input.
      Tab order flows first-to-second input.
    blocks:
    - behaviour: Accepts first number. Validates numeric input only.
      id: input_field_1
    - behaviour: Accepts second number. Validates numeric input only.
      id: input_field_2
    id: inputs
    title: Enter Numbers
    visual: Two labeled input fields, full width of card, stacked with 16px space
      between.
  - behaviour: Button is enabled only if both inputs are valid numbers. On click,
      computes and reveals result.
    blocks:
    - behaviour: When clicked, reads inputs, computes sum, triggers result display.
      id: sum_button
    id: sum_action
    title: Calculate Sum
    visual: Primary blue full-width button labeled 'Sum', spaced 16px below inputs.
  - behaviour: 'Shows sum as ''Result: X''. Cleared if input changes.'
    blocks:
    - behaviour: Updates with latest sum when computed; clears on input change.
      id: display_result
    id: result_display
    title: Result
    visual: Appears below button, large blue text (20px, bold), center-aligned. Only
      visible after sum calculated.
  title: 2-Sum Calculator
  visual: 'Card centered on page, vertical layout: two input fields, then button,
    then result. Spaced vertically, with subtle shadows and rounded corners.'
summary: A simple UI that allows users to input two numbers and displays their sum.
  All logic is performed client-side, with no backend service.
visual: Minimal, clean card-style form centered on a white background. Inputs and
  buttons use a modern, flat style with blue accent colors (#2563EB). Generous spacing
  and clear text labels for accessibility. Responsive layout for mobile and desktop.
