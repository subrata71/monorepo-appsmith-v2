client:
  components:
    entities:
    - description: Displays a single habit name in the list (no completion, just name)
      entity: habit
      name: HabitItem
      props:
      - habit
    features:
    - description: Handles controlled input, validation, and on-submit for adding
        habits
      entities: []
      feature: add-habit-ui
      name: AddHabitForm
      props:
      - onAddHabit
      shared:
      - Input
      - Button
    - description: Renders a vertical list of HabitItem components from session state
      entities:
      - HabitItem
      feature: add-habit-ui
      name: HabitList
      props: []
      shared: []
    shared:
    - category: ui
      description: Accessible, primary action button with focus styles and disabled
        state
      name: Button
      props:
      - children
      - onClick
      - disabled
      - type
    - category: ui
      description: Accessible, styled text input with maxLength, autoFocus, and error
        display
      name: Input
      props:
      - value
      - onChange
      - maxLength
      - autoFocus
      - placeholder
      - error
    - category: ui
      description: Generic card container with shadow and padding
      name: Card
      props:
      - children
    - category: ui
      description: Accessible heading component for page titles and sections
      name: Heading
      props:
      - children
      - level
    widgets:
    - description: Combines heading, AddHabitForm, and HabitList in a vertical card
        layout
      entities: []
      features:
      - AddHabitForm
      - HabitList
      name: AddHabitCard
      props: []
      shared:
      - Card
      - Heading
  pages:
  - description: Let users add a new habit to their personal (in-memory) habit list.
      Accessible, responsive UI.
    queries: []
    route: /add-habit
    title: Add Habit
    widgets:
    - AddHabitCard
  stores:
  - actions:
    - addHabit
    - toggleHabitCompletion
    - resetHabits
    description: Holds in-memory list of habits for the current session, supports
      adding, toggling, and resetting habits.
    layer: entities
    name: habitSessionStore
    state_shape:
    - name: habits
      type: Habit[]
components:
  parameters: []
  responses: []
  schemas:
  - name: Habit
    type: object
domains:
- apis: []
  description: Represents a habit and its local completion status for the current
    session. Now supports adding habits in-memory.
  models:
  - description: Represents a user habit in the UI.
    fields:
    - name: id
      nullable: false
      pk: true
      type: string
    - name: name
      nullable: false
      pk: false
      type: string
    - name: completed
      nullable: false
      pk: false
      type: boolean
    name: Habit
  name: habit
  services:
  - description: Handles local state management of habits, completion, and now adding
      new habits to the session (no persistence).
    methods:
    - getDefaultHabits
    - toggleHabitCompletion
    - addHabit
    name: HabitSessionService
metadata:
  description: Adds an in-memory UI for users to add new habits to the session habit
    list. No persistence, no backend.
  generated_at: '2024-06-12T15:00:00Z'
  name: Add Habit UI
  version: 1.1.0
product:
  features:
  - description: Lets users enter a new habit name and add it to their personal session
      list in the UI. No persistence.
    domains:
    - habit
    id: add-habit-ui
    priority: high
    title: Add Habit UI
  goals:
  - Allow users to add new habits for the current session with no backend or persistence
  - Maintain accessible, visually clear UI for entering and viewing habits
  - Extend the habit tracking UI to support entry of arbitrary habits
  personas:
  - description: Any person who wants to quickly track daily habits in a simple, non-persistent
      way.
    goals:
    - View their daily habits
    - Mark habits as complete for today
    - Add new habits to their personal list
    - Use the interface with keyboard, mouse, or touch
    name: General User
  summary: Enables users to add custom habits to their in-memory habit list via a
    minimal, accessible UI.
use_cases:
- actors:
  - General User
  apis: []
  description: The user enters a habit name and adds it to the current in-memory list.
    No persistence.
  domains:
  - habit
  happy_path:
  - User enters a valid habit name (<=50 chars) in the input field.
  - User presses 'Add' button or Enter.
  - The new habit appears immediately in the list below.
  - Input is cleared and ready for the next entry.
  id: add-habit
  pages:
  - /add-habit
  postconditions:
  - The session habit list is updated on screen.
  - No backend calls or persistence.
  - Validation prevents empty or too-long names.
  preconditions:
  - User navigates to the Add Habit page.
  - Habit list is empty or has habits from this session.
  title: Add New Habit to List
user_journeys:
- id: add-habit-session
  persona: General User
  related_use_cases:
  - add-habit
  steps:
  - action: Open the Add Habit page
    page: /add-habit
  - action: Enter a valid habit name in the input
    page: /add-habit
  - action: Press 'Add' or hit Enter to submit
    page: /add-habit
  - action: See the new habit appear in the list below
    page: /add-habit
  - action: Repeat to add more habits as desired
    page: /add-habit
  - action: Reloading the page clears the list (no persistence)
    page: /add-habit
  success_criteria: User can add one or more habits and see them in the list without
    page reload; input is validated and accessible.
  title: Add Habit in Session
